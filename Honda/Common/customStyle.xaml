<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:UserCtrl="clr-namespace:Honda.UserCtrl"
                    xmlns:V="clr-namespace:Honda.View"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:VM="clr-namespace:Honda.ViewModel"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:Custom="http://www.galasoft.ch/mvvmlight" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    mc:Ignorable="d"
                    >

    <!-- Begin  *****************************登陆页样式设置**********************************************-->

    <!-- End*****************************登陆页样式设置**********************************************-->
    <!--End*****************************MainIndexPage样式设置**********************************************-->
    <!--End*****************************EvaluationOfTourPage（巡回评价表）**********************************************-->
    <!--End*****************************（生成页）**********************************************-->

    <!--Begin*****************************（表格）**********************************************-->

    <!--End*****************************（表格）**********************************************-->

    <!--End*****************************（店列表）**********************************************-->

    <!-- 一生成页表格的边框的颜色-->
    <SolidColorBrush x:Key="PreviewFormBorder" Color="#FFDAD3DD" />
    <!-- 一导航条背景颜色-->
    <SolidColorBrush x:Key="NavigationBarBackgroundBrush" Color="#FFE9EFF4" />
    <!--白色背景-->
    <SolidColorBrush x:Key="WhiteBackgroundBrush" Color="#FFFFFFFF" />
    <!--黑色-->
    <SolidColorBrush x:Key="BlackBackgroundBrush" Color="#FF000000" />
    <!--红色-->
    <SolidColorBrush x:Key="RedBackgroundBrush" Color="#FFC30E24" />
    <!--灰色-->
    <SolidColorBrush x:Key="GrayBackgroundBrush" Color="#FFE8E9EA" />
    <!--签名区背景-->
    <SolidColorBrush x:Key="SignatureBackgroundBrush" Color="#FFF2F2F2" />
    <!--签名区字体-->
    <Style x:Key="TextBlockSignatureStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FFD2D2D2"/>
        <Setter Property="FontSize" Value="93.333"/>
    </Style>

    <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>-->
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="5.8,0,0,5.8">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>-->
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="0,6,6,0">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonStyle3" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" >
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!-- 颜色-->
    <SolidColorBrush x:Key="Login_BorderBrush" Color="#FFB4DDFB" />
    <SolidColorBrush x:Key="Login_PageBackgroundBrush" Color="#FFFDFDFD" />
    <SolidColorBrush x:Key="Login_CheckBox_ForegroundBrush" Color="#FFFDFDFD" />
    <!-- 控件-->
    <Style x:Key="ImageButtonExStyle1" TargetType="{x:Type UserCtrl:ImageButtonEx}">

        <Setter Property="Background" Value="#FFDDDDDD"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type UserCtrl:ImageButtonEx}">
                    <Grid Height="Auto">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="imaPress">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="imaNormal">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Image x:Name="imaNormal" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Stretch="Fill" Source="{TemplateBinding ImageSource}"/>
                        <Image x:Name="imaPress" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Stretch="Fill" Source="{TemplateBinding ImagePressSource}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="ToggleButton.IsChecked" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
    <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
    <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>-->
        <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="Center" Width="30" Height="30" BorderBrush="{DynamicResource Login_BorderBrush}">
                            <Grid x:Name="markGrid">
                                <Path x:Name="optionMark" Data="F1 M 19.94996,2.44668L 9.3966,18.19668L 9.04328,18.19668L 0,10.4L 2.54,7.04L 8.51,12.17666L 16.66662,1.52588e-005L 19.94596,4.89328 Z " Fill="{DynamicResource Login_BorderBrush}" Margin="1" Opacity="0" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" Width="Auto" Height="Auto"/>
                                <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <!--<Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>-->
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
    <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
    <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <!--<Setter Property="FocusVisualStyle" Value="{x:Null}"/>-->
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TextBlockStyle1" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="48"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Foreground" Value="#FF231815"/>
    </Style>

    <!--Begin*****************************MainIndexPage样式设置**********************************************-->
    <SolidColorBrush x:Key="MainIndex_PageBackgroundBrush" Color="#FFF7FAFC" />
    <DataTemplate x:Key="StoreTemplate">
        <Grid Width="1200" >

            <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="11*"/>
                    <ColumnDefinition Width="19*"/>
                </Grid.ColumnDefinitions>
                <TextBlock HorizontalAlignment="Left" Margin="0,23.067" TextWrapping="Wrap" VerticalAlignment="Center" FontSize="25" Height="33.866" Width="Auto" Text="{Binding StoreName}"/>
                <StackPanel Grid.Column="1" HorizontalAlignment="Right" Height="Auto" Margin="0" Width="Auto" Orientation="Horizontal"     >

                    <UserCtrl:ImageButtonEx Content="巡回评价表" Height="40" Width="100" Margin="0,20,20,20" IsDefault="True" FontSize="14.667" x:Name="btnTour"   Visibility="{Binding BisShowTour}"
  Command="{Binding DataContext.NavigateToTourCommand, ElementName=LayoutRoot}" CommandParameter="{Binding ''}" />

                    <UserCtrl:ImageButtonEx Content="改善计划" Height="40" Width="90" Margin="0,20,20,20" FontSize="14.667"   Visibility="{Binding BisShowImprove}"
  Command="{Binding DataContext.NavigateToImproveCommand, ElementName=LayoutRoot}" CommandParameter="{Binding ''}"/>
                    <UserCtrl:ImageButtonEx Content="工作亮点与意见需求" Height="40" Width="150" Margin="0,20,20,20" FontSize="14.667"  Visibility="{Binding BisShowLightspotAndIdea}"
  Command="{Binding DataContext.NavigateToLightspotAndIdeaCommand, ElementName=LayoutRoot}" CommandParameter="{Binding ''}"/>
                    <UserCtrl:ImageButtonEx Content="商务政策" Height="40" Width="90" Margin="0,0,20,0" FontSize="14.667"  Visibility="{Binding BisShowBusinessPolicy}"
  Command="{Binding DataContext.NavigateToBusinessCommand, ElementName=LayoutRoot}" CommandParameter="{Binding ''}"/>
                    <UserCtrl:ImageButtonEx Content="评价记录" Height="40" Width="90" Margin="0,20" FontSize="14.667"  Visibility="{Binding BisShowRecord}"
  Command="{Binding DataContext.NavigateToRecordCommand, ElementName=LayoutRoot}" CommandParameter="{Binding ''}"/>
                </StackPanel>
            </Grid>
        </Grid>
    </DataTemplate>
    <!--Begin*****************************EvaluationOfTourPage（巡回评价表）**********************************************-->
    <SolidColorBrush x:Key="PageBackgroundBrush" Color="#FFF7FAFC" />
    <!-- 导航按钮正常状态下的颜色-->
    <SolidColorBrush x:Key="ButtonBackgroundNormalBlueBrush" Color="#FF2A90F0" />
    <SolidColorBrush x:Key="TextForegroundBlueBrush" Color="#FF3496F2" />

    <Style x:Key="ImageButtonExStyle2" TargetType="{x:Type UserCtrl:ImageButtonEx}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#FFDDDDDD"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type UserCtrl:ImageButtonEx}">
                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="89.5,26.873" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Panel.ZIndex="1"/>
                        <Image Height="Auto" VerticalAlignment="Stretch" Width="Auto" Stretch="Fill" Source="{TemplateBinding ImageSource}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="ToggleButton.IsChecked" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>



    <Style x:Key="ListBoxItemStyle2" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid Height="87" Width="330">
                        <TextBlock  x:Name="_name" HorizontalAlignment="Left" TextWrapping="Wrap" Text="{Binding _pageName}" VerticalAlignment="Center" FontSize="25" Margin="30,0,0,0" Panel.ZIndex="1" Foreground="#FF231815"/>
                        <Image x:Name="ima" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Stretch="Fill" Source="{Binding ImgNormalUri, Mode=OneWay}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Source" Value="{Binding ImgSelectedUri}" TargetName="ima"/>
                            <Setter Property="Foreground" Value="#FF5BAAF4" TargetName="_name"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <DataTemplate x:Key="StoreTemplate3">
        <Grid Height="87" Width="330">
            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="{Binding _pageName}" VerticalAlignment="Center" FontSize="25" Margin="30,0,0,0" Panel.ZIndex="1"/>
            <Image Height="Auto" VerticalAlignment="Stretch" Width="Auto" Stretch="Fill" Source="{Binding ImgNormalUri, Mode=OneWay}" />
        </Grid>
    </DataTemplate>
    <!--Begin*****************************（生成页）**********************************************-->
    <Style x:Key="TextBlockEvaluationOfTourStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="45"/>
    </Style>

    <SolidColorBrush x:Key="ButtonBackgroundPressBlueBrush" Color="#FF608ABD" />
    <!-- 一表格边框颜色-->
    <SolidColorBrush x:Key="FormBorderBrush1" Color="#FFDAD3DD" />

    <Style x:Key="FormTbkStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FF898989"/>
        <Setter Property="FontSize" Value="20"/>
    </Style>

    <!-- 一表格外面的边框背景颜色-->
    <SolidColorBrush x:Key="FormBorderBrush" Color="#FFBDD5E0" />
    <!-- 一表格头和尾部边框颜色-->
    <SolidColorBrush x:Key="FormTopAndBottomBorderBrush" Color="#FFDAE8EE" />

    <!-- 一表格字体颜色-->
    <SolidColorBrush x:Key="FormForegroundBrush" Color="#FF898989" />

    <!-- 一Combox边框颜色-->
    <SolidColorBrush x:Key="ComboxBorderBrush" Color="#FFC3AEAE" />

    <!-- 一表格背景高亮颜色-->
    <SolidColorBrush x:Key="FormBackgroundHighBrush" Color="#FFFFF5CC" />

    <!-- 一表格背景颜色-->
    <SolidColorBrush x:Key="FormBackgroundBrush" Color="#FFF7FAFC" />
    <!-- 一弹出框弹出后，按钮背景的颜色-->
    <SolidColorBrush x:Key="ButtonOpenBackgroundBrush" Color="#FFE9EFF4" />



    <Style x:Key="FormHeaderTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FF2D2523"/>
        <Setter Property="FontSize" Value="25"/>
    </Style>

    <Style x:Key="FormBottomTextStyle1" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FF2D2523"/>
        <Setter Property="FontSize" Value="33"/>
    </Style>

    <Style x:Key="FormBottomScoreStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="33"/>
        <Setter Property="Foreground" Value="#FFC30D23"/>
    </Style>


    <!--Begin*****************************（店列表）**********************************************-->

    <SolidColorBrush x:Key="ItemBackgroundBrush1" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ItemBackgroundBrush2" Color="#FF3496F2" />
    <SolidColorBrush x:Key="ItemBackgroundBrush3" Color="#FFDBDBDB" />
    <SolidColorBrush x:Key="ItemborderBrush" Color="#FF3496F2" />

    <DataTemplate x:Key="StoreTemplate1">
        <Grid Height="87" Width="330">
            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="{Binding StoreName}" VerticalAlignment="Center" FontSize="25" Margin="30,0,0,0" Panel.ZIndex="1"/>
            <Image Height="Auto" VerticalAlignment="Stretch" Width="Auto" Stretch="Fill" Source="{Binding ImgNormalUri, Mode=OneWay}" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="StoreTemplate2">
        <Grid Height="87" Width="330">
            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="{Binding StoreName}" VerticalAlignment="Center" FontSize="25" Margin="30,0,0,0" Panel.ZIndex="1"/>
            <Image Height="Auto" VerticalAlignment="Stretch" Width="Auto" Stretch="Fill" Source="{Binding ImgSelectedUri, Mode=OneWay}" />
        </Grid>
    </DataTemplate>

    <Style x:Key="ListBoxItemStyle1" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid Height="87" Width="330">
                        <TextBlock x:Name="_name" HorizontalAlignment="Left" TextWrapping="Wrap" Text="{Binding StoreName}" VerticalAlignment="Center" FontSize="25" Margin="30,0,0,0" Panel.ZIndex="1" Foreground="#FF231815" Visibility="{Binding _bIsShowNormal}"/>
                        <Grid HorizontalAlignment="Left" VerticalAlignment="Top" Margin="30,0,0,0" Panel.ZIndex="1" Visibility="{Binding _bIsShowCrossDistrict}">
                            <TextBlock x:Name="name_cross_district" HorizontalAlignment="Left" TextWrapping="Wrap" Text="{Binding StoreName}" VerticalAlignment="Top" FontSize="25" Margin="0,20,0,0" Panel.ZIndex="1" Foreground="#FF97101B" />
                            <TextBlock x:Name="_cross_district" HorizontalAlignment="Center" TextWrapping="Wrap" Text="(跨区)" VerticalAlignment="Top" FontSize="16" Margin="0,50,0,0" Panel.ZIndex="1" Foreground="#FF97101B" />
                        </Grid>
                        <Image x:Name="ima" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Stretch="Fill" Source="{Binding ImgNormalUri, Mode=OneWay}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsSelected" Value="True">
                            <Setter Property="Source" Value="{Binding ImgSelectedUri}" TargetName="ima"/>
                            <Setter Property="Foreground" Value="#FF5BAAF4" TargetName="_name"/>
                            <Setter Property="Foreground" Value="#FF5BAAF4" TargetName="name_cross_district"/>
                            <Setter Property="Foreground" Value="#FF5BAAF4" TargetName="_cross_district"/>
                        </Trigger>-->
                        <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                            <Setter Property="Source" Value="{Binding ImgSelectedUri}" TargetName="ima"/>
                            <Setter Property="Foreground" Value="#FF5BAAF4" TargetName="_name"/>
                            <Setter Property="Foreground" Value="#FF5BAAF4" TargetName="name_cross_district"/>
                            <Setter Property="Foreground" Value="#FF5BAAF4" TargetName="_cross_district"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>



    <Style x:Key="ItemTextBlockStyle1" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="36"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Foreground" Value="#FF3496F2"/>
    </Style>

    <Style x:Key="ItemTextBlockStyle2" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="36"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
    </Style>

    <Style x:Key="ItemTextBlockStyle3" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="36"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Foreground" Value="#FF717071"/>
    </Style>
    <DataTemplate x:Key="TaskTemplate">
        <Grid Width="330" Height="234" Background="#FFFFFDFD">
            <Border BorderBrush="#FFDEE3E6" BorderThickness="0,0,0,2" Height="Auto" Margin="24,0,0,0" VerticalAlignment="Stretch" Width="Auto">
                <StackPanel>
                    <Grid Height="35" Margin="0,40,0,0">
                        <StackPanel Height="Auto" VerticalAlignment="Stretch" Width="Auto" Orientation="Horizontal">
                            <TextBlock TextWrapping="Wrap" Text="{Binding TaskName}" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="25" Margin="0" Foreground="{Binding Foreground}"/>
                            <Image Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" Source="{Binding icoPath}"/>
                        </StackPanel>
                    </Grid>
                    <Grid Height="35" Margin="0,5,0,0">
                        <StackPanel Height="Auto" VerticalAlignment="Stretch" Width="Auto" Orientation="Horizontal">
                            <TextBlock TextWrapping="Wrap" Text="任务状态：" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="25" Margin="0" Foreground="{Binding Foreground}"/>
                            <TextBlock x:Name="tbkTaskStatus" TextWrapping="Wrap" Text="{Binding TaskStatus}" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="25" Margin="0,4.8" Foreground="{Binding Foreground}"/>
                        </StackPanel>
                    </Grid>
                    <Grid Height="35" Margin="0,5,0,0">
                        <StackPanel Height="Auto" VerticalAlignment="Stretch" Width="Auto" Orientation="Horizontal">
                            <TextBlock TextWrapping="Wrap" Text="任务开始时间：" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="25" Margin="0" Foreground="{Binding Foreground}"/>
                            <TextBlock x:Name="tbkTaskBeginTime" TextWrapping="Wrap" Text="{Binding TaskBeginTime}" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="25" Margin="0,4.8" Foreground="{Binding Foreground}"/>
                        </StackPanel>
                    </Grid>
                    <Grid Height="35" Margin="0,5,0,0">
                        <StackPanel Height="Auto" VerticalAlignment="Stretch" Width="Auto" Orientation="Horizontal">
                            <TextBlock TextWrapping="Wrap" Text="任务结束时间：" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="25" Margin="0" Foreground="{Binding Foreground}"/>
                            <TextBlock x:Name="tbkTaskEndTime" TextWrapping="Wrap" Text="{Binding TaskEndTime}" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="25" Margin="0,4.8" Foreground="{Binding Foreground}"/>
                        </StackPanel>
                    </Grid>
                </StackPanel>
            </Border>
        </Grid>
    </DataTemplate>
    <Style x:Key="ListBoxScheduleManageItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid Width="330" Height="160" Background="#FFFFFDFD">
                        <Border BorderBrush="#FFDEE3E6" BorderThickness="0,0,0,2" Height="Auto" Margin="24,0,0,0" VerticalAlignment="Stretch" Width="Auto">
                            <StackPanel>
                                <Grid Height="35" Margin="0,40,0,0">
                                    <StackPanel Height="Auto" VerticalAlignment="Stretch" Width="Auto" Orientation="Horizontal">
                                        <TextBlock TextWrapping="Wrap" Text="{Binding TaskName}" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="25" Margin="0" Foreground="{Binding Foreground}"/>
                                        <Image Stretch="None" HorizontalAlignment="Left" VerticalAlignment="Center" Source="{Binding icoPath}" Width="Auto" Height="Auto" Margin="10,0,0,0"/>
                                    </StackPanel>
                                </Grid>
                                <Grid Height="35" Margin="0,5,0,0">
                                    <StackPanel Height="Auto" VerticalAlignment="Stretch" Width="Auto" Orientation="Horizontal">
                                        <TextBlock TextWrapping="Wrap" Text="任务状态：" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="25" Margin="0" Foreground="{Binding Foreground}"/>
                                        <TextBlock x:Name="tbkTaskStatus" TextWrapping="Wrap" Text="{Binding TaskStatus}" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="25" Margin="0,4.8" Foreground="{Binding Foreground}"/>
                                    </StackPanel>
                                </Grid>


                            </StackPanel>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextBlockStyle2" TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="TextTrimming" Value="None"/>
        <Setter Property="FontSize" Value="20"/>
    </Style>
    <Style x:Key="BorderStyle1" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{DynamicResource PreviewFormBorder}"/>
        <Setter Property="BorderThickness" Value="1,0,0,1"/>
    </Style>
    <Style x:Key="ImageButtonExStyle3" TargetType="{x:Type UserCtrl:ImageButtonEx}">

        <Setter Property="Background" Value="#FFDDDDDD"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type UserCtrl:ImageButtonEx}">
                    <Grid Height="Auto">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="imaPress">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="imaNormal">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="imaPress">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>


                        </VisualStateManager.VisualStateGroups>
                        <Image x:Name="imaNormal" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Stretch="Fill" Source="{TemplateBinding ImageSource}"/>
                        <Image x:Name="imaPress" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Stretch="Fill" Source="{TemplateBinding ImagePressSource}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="ToggleButton.IsChecked" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextBlockStyle3" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FF2D2523"/>
        <Setter Property="FontSize" Value="20"/>
    </Style>
    <ItemsPanelTemplate x:Key="ItemsPanelTemplate1">
        <StackPanel IsItemsHost="True">
            <i:Interaction.Behaviors>
                <ei:FluidMoveBehavior AppliesTo="Children"/>
            </i:Interaction.Behaviors>
        </StackPanel>
    </ItemsPanelTemplate>
    <Style x:Key="ListBoxItemWorkLightStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid HorizontalAlignment="Stretch" Height="230" >
                        <Border BorderBrush="#FF898383" BorderThickness="1,0,1,1" Height="Auto" VerticalAlignment="Stretch" Width="Auto">
                            <Grid  HorizontalAlignment="Stretch" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="9*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="2*"/>
                                </Grid.ColumnDefinitions>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="{Binding strNo}" VerticalAlignment="Center" FontSize="25"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="1">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <ComboBox  HorizontalAlignment="Center" VerticalAlignment="Center" Width="120" Height="36.12" Margin="0" ItemsSource="{Binding Listprojecct}"  SelectedItem="{Binding SelectProject}" DisplayMemberPath="projectName" IsSynchronizedWithCurrentItem="True"  Tag="{Binding}" FontSize="25">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger>
                                                    <i:InvokeCommandAction Command="{Binding DataContext.ComboboxLoadedCommand, ElementName=LayoutRoot}"  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ComboBox}, Mode=FindAncestor}}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ComboBox>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="2">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <ComboBox  HorizontalAlignment="Center" VerticalAlignment="Center" Width="120" Height="36.12" Margin="0" ItemsSource="{Binding Listcategory}" DisplayMemberPath="categoryName" SelectedItem="{Binding SelectCategory}" IsSynchronizedWithCurrentItem="True" Tag="{Binding}" FontSize="25" >
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger  >
                                                    <i:InvokeCommandAction Command="{Binding DataContext.ComboboxLoadedCommand2, ElementName=LayoutRoot}"  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ComboBox}, Mode=FindAncestor}}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ComboBox>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="3">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <TextBox HorizontalAlignment="Stretch" Height="Auto" TextWrapping="Wrap" VerticalAlignment="Stretch" Width="Auto" Margin="20,10" Text="{Binding ContentDes, Mode=TwoWay}" FontSize="29.333"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="4">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <StackPanel Height="Auto" VerticalAlignment="Center" Width="Auto">
                                            <Button Content="上传" HorizontalAlignment="Center" VerticalAlignment="Top" Width="75" Margin="0" Height="40" Background="{x:Null}" BorderBrush="{DynamicResource ItemborderBrush}" Foreground="{DynamicResource TextForegroundBlueBrush}" Visibility="{Binding IsShowPictrueUploadBtn}" Command="{Binding DataContext.UploadPictrueCommand, ElementName=LayoutRoot}" CommandParameter="{Binding}" FontSize="25"/>
                                            <TextBlock TextWrapping="Wrap" Text="未上传" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,5,0,0" FontSize="25" Foreground="#FF999999" Visibility="{Binding IsShowPictrueNotUpload}"/>
                                            <Grid Visibility="{Binding IsShowPictrue0}">
                                                <StackPanel Margin="0,5,0,0" Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center" MaxWidth="170" >
                                                    <TextBlock x:Name="tbkIma0" TextWrapping="Wrap" Text="{Binding ImaName0}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0" FontSize="13" Foreground="Blue"/>
                                                    <Button Content="删除" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,-2,0,0" FontSize="25" Foreground="#FFFD0404" BorderThickness="0" Background="{x:Null}" BorderBrush="{x:Null}" Command="{Binding DataContext.DeletPictrue0Command, ElementName=LayoutRoot}" CommandParameter="{Binding}"/>
                                                </StackPanel>
                                            </Grid>
                                            <Grid Visibility="{Binding IsShowPictrue1}" Margin="0">
                                                <StackPanel Margin="8,0" Orientation="Vertical" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" MaxWidth="170">
                                                    <TextBlock x:Name="tbkIma1" TextWrapping="Wrap" Text="{Binding ImaName1}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0" FontSize="13" Foreground="Blue" />
                                                    <Button Content="删除" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,-4,0,0" FontSize="25" Foreground="#FFFD0404" BorderThickness="0" Background="{x:Null}" BorderBrush="{x:Null}" Command="{Binding DataContext.DeletPictrue1Command, ElementName=LayoutRoot}" CommandParameter="{Binding}"/>
                                                </StackPanel>
                                            </Grid>
                                            <Grid Visibility="{Binding IsShowPictrue2}" Margin="0,-1.5,0,0">
                                                <StackPanel Margin="0" Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                    <TextBlock x:Name="tbkIma2" TextWrapping="Wrap" Text="{Binding ImaName2}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0" FontSize="13" Foreground="Blue"/>
                                                    <Button Content="删除" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,-4,0,0" FontSize="25" Foreground="#FFFD0404" BorderThickness="0" Background="{x:Null}" BorderBrush="{x:Null}" Command="{Binding DataContext.DeletPictrue2Command, ElementName=LayoutRoot}" CommandParameter="{Binding}"/>
                                                </StackPanel>
                                            </Grid>

                                        </StackPanel>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="5">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <StackPanel Height="Auto" VerticalAlignment="Center" Width="Auto">
                                            <Button Content="上传" HorizontalAlignment="Center" VerticalAlignment="Top" Width="75" Margin="0" Height="40" Background="{x:Null}" BorderBrush="{DynamicResource ItemborderBrush}" Foreground="{DynamicResource TextForegroundBlueBrush}" Visibility="{Binding IsShowAudioUploadBtn}" Command="{Binding DataContext.UploadAudioCommand, ElementName=LayoutRoot}" CommandParameter="{Binding}" FontSize="25"/>
                                            <TextBlock TextWrapping="Wrap" Text="未上传" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,5,0,0" FontSize="25" Foreground="#FF999999" Visibility="{Binding IsShowAudioNotUpload}"/>
                                            <Grid Visibility="{Binding IsShowAudio}">
                                                <StackPanel Margin="0,5,0,0" Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                    <TextBlock x:Name="tbkMp3" TextWrapping="Wrap" Text="{Binding AudioName}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0" FontSize="13" Foreground="Blue"/>
                                                    <Button Content="删除" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" FontSize="25" Foreground="#FFFD0404" BorderThickness="0" Background="{x:Null}" BorderBrush="{x:Null}"  Command="{Binding DataContext.DeletAudioCommand, ElementName=LayoutRoot}" CommandParameter="{Binding}"/>
                                                </StackPanel>
                                            </Grid>
                                        </StackPanel>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="6">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <StackPanel Height="Auto" VerticalAlignment="Center" Width="Auto">
                                            <Button Content="上传" HorizontalAlignment="Center" VerticalAlignment="Top" Width="75" Margin="0" Height="40" Background="{x:Null}" BorderBrush="{DynamicResource ItemborderBrush}" Foreground="{DynamicResource TextForegroundBlueBrush}" Visibility="{Binding IsShowVideoUploadBtn}" Command="{Binding DataContext.UploadVideoCommand, ElementName=LayoutRoot}" CommandParameter="{Binding}" FontSize="25"/>
                                            <TextBlock TextWrapping="Wrap" Text="未上传" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,5,0,0" FontSize="25" Foreground="#FF999999" Visibility="{Binding IsShowVideoNotUpload}"/>
                                            <Grid Visibility="{Binding IsShowVideo}">
                                                <StackPanel Margin="0,5,0,0" Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                    <TextBlock x:Name="tbkVideo" TextWrapping="Wrap" Text="{Binding VideoName}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0" FontSize="13" Foreground="Blue"/>
                                                    <Button Content="删除" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" FontSize="25" Foreground="#FFFD0404" BorderThickness="0" Background="{x:Null}" BorderBrush="{x:Null}"  Command="{Binding DataContext.DeletVideoCommand, ElementName=LayoutRoot}" CommandParameter="{Binding}" />
                                                </StackPanel>
                                            </Grid>
                                        </StackPanel>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="7">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <StackPanel Height="Auto" VerticalAlignment="Center" Width="Auto">
                                            <Button Content="上传" HorizontalAlignment="Center" VerticalAlignment="Top" Width="75" Margin="0" Height="40" Background="{x:Null}" BorderBrush="{DynamicResource ItemborderBrush}" Foreground="{DynamicResource TextForegroundBlueBrush}" Visibility="{Binding IsShowDocUploadBtn}" Command="{Binding DataContext.UploadDocCommand, ElementName=LayoutRoot}" CommandParameter="{Binding}" FontSize="25"/>
                                            <TextBlock TextWrapping="Wrap" Text="未上传" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,5,0,0" FontSize="25" Foreground="#FF999999" Visibility="{Binding IsShowDocNotUpload}"/>
                                            <Grid Visibility="{Binding IsShowDoc0}">
                                                <StackPanel Margin="0,5,0,0" Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                    <TextBlock x:Name="tbkDoc0" TextWrapping="Wrap" Text="{Binding DocName0}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0" FontSize="13" Foreground="Blue"/>
                                                    <Button Content="删除" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" FontSize="25" Foreground="#FFFD0404" BorderThickness="0" Background="{x:Null}" BorderBrush="{x:Null}"  Command="{Binding DataContext.DeletDoc0Command, ElementName=LayoutRoot}" CommandParameter="{Binding}"/>
                                                </StackPanel>
                                            </Grid>
                                            <Grid Visibility="{Binding IsShowDoc1}">
                                                <StackPanel Margin="0,5,0,0" Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                    <TextBlock x:Name="tbkDoc1" TextWrapping="Wrap" Text="{Binding DocName1}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0" FontSize="13" Foreground="Blue"/>
                                                    <Button Content="删除" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" FontSize="25" Foreground="#FFFD0404" BorderThickness="0" Background="{x:Null}" BorderBrush="{x:Null}"  Command="{Binding DataContext.DeletDoc1Command, ElementName=LayoutRoot}" CommandParameter="{Binding}"/>
                                                </StackPanel>
                                            </Grid>
                                        </StackPanel>
                                    </Grid>
                                </Border>
                                <Grid Grid.ColumnSpan="1" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="8">
                                    <Button Content="删除" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" FontSize="25" Foreground="#FFFD0404" BorderThickness="0" Background="{x:Null}" BorderBrush="{x:Null}" Command="{Binding DataContext.DeletWorkLightCommand, ElementName=LayoutRoot}" CommandParameter="{Binding}"/>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ListBoxItemSummaryStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid Width="1803" Height="180" >
                        <Border BorderBrush="#FF898383" BorderThickness="1,0,1,1" Height="Auto" VerticalAlignment="Stretch" Width="Auto">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="9*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                </Grid.ColumnDefinitions>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="{Binding strNo}" VerticalAlignment="Center" FontSize="25"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="1">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="{Binding DocName}" VerticalAlignment="Center" FontSize="25"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="2">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="{Binding docPath}" VerticalAlignment="Center" FontSize="25"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="3">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <StackPanel Height="Auto" VerticalAlignment="Center" Width="Auto">
                                            <Button Content="上传" HorizontalAlignment="Center" VerticalAlignment="Top" Width="75" Margin="0" Height="40" Background="{x:Null}" BorderBrush="{DynamicResource ItemborderBrush}" Foreground="{DynamicResource TextForegroundBlueBrush}" Visibility="{Binding IsShowDocUploadBtn}" Command="{Binding DataContext.UploadDocCommand, ElementName=LayoutRoot}" CommandParameter="{Binding}" FontSize="25"/>
                                            <TextBlock TextWrapping="Wrap" Text="未上传" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,5,0,0" FontSize="25" Foreground="#FF999999" Visibility="{Binding IsShowDocNotUpload}"/>
                                            <Grid Visibility="{Binding IsShowDoc}">
                                                <StackPanel Margin="0,5,0,0" Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                    <TextBlock x:Name="tbkDoc" TextWrapping="Wrap" Text="{Binding DocName}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0" FontSize="15" Foreground="Blue"/>
                                                    <Button Content="删除" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" FontSize="25" Foreground="#FFFD0404" BorderThickness="0" Background="{x:Null}" BorderBrush="{x:Null}"  Command="{Binding DataContext.DeletDocCommand, ElementName=LayoutRoot}" CommandParameter="{Binding}"/>
                                                </StackPanel>
                                            </Grid>
                                        </StackPanel>
                                    </Grid>
                                </Border>
                                <Grid Grid.ColumnSpan="1" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="4">
                                    <Button Content="删除" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" FontSize="25" Foreground="#FFFD0404" BorderThickness="0" Background="{x:Null}" BorderBrush="{x:Null}" Command="{Binding DataContext.DeletSummary, ElementName=LayoutRoot}" CommandParameter="{Binding}"/>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ListBoxItemBusinessesStyle1" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid HorizontalAlignment="Stretch">
                        <Border BorderBrush="#FF898383" BorderThickness="1,0,1,1" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                            <Grid Height="120">
                                <Grid.ColumnDefinitions>

                                    <ColumnDefinition Width="4*"/>
                                    <ColumnDefinition Width="4*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="10*"/>
                                    <ColumnDefinition Width="4*"/>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="2*"/>
                                </Grid.ColumnDefinitions>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <TextBox Height="Auto" TextWrapping="Wrap" VerticalAlignment="Stretch" Width="Auto" Margin="20,10" Text="{Binding partName, Mode=TwoWay}" FontSize="25"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="1">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <TextBox HorizontalAlignment="Stretch" Height="Auto" TextWrapping="Wrap" VerticalAlignment="Stretch" Width="Auto" Margin="20,10" Text="{Binding partNo, Mode=TwoWay}" FontSize="25"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="2">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <TextBox Height="Auto" TextWrapping="Wrap" VerticalAlignment="Center" Width="Auto" Margin="20,10" Text="{Binding price, Mode=TwoWay}" FontSize="25">

                                        </TextBox>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="3">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <TextBox HorizontalAlignment="Stretch" Height="Auto" TextWrapping="Wrap" VerticalAlignment="Center" Width="Auto" Margin="20,10" Text="{Binding partNum, Mode=TwoWay}" FontSize="25"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="4">
                                    <Grid >
                                        <DatePicker HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center" Width="230" FontSize="25"  Tag="{Binding}" SelectedDate="{Binding startDate ,Mode=TwoWay}">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="SelectedDateChanged" >
                                                    <i:InvokeCommandAction Command="{Binding DataContext.NotPureStartDateTimeValueChangedCommod, ElementName=LayoutRoot}"  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type DatePicker}, Mode=FindAncestor}}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </DatePicker>
                                        <DatePicker HorizontalAlignment="Right" Margin="0,0,10,0" VerticalAlignment="Center" Width="230" FontSize="25" Tag="{Binding}" SelectedDate="{Binding endDate,Mode=TwoWay}" >
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="SelectedDateChanged">
                                                    <i:InvokeCommandAction Command="{Binding DataContext.NotPureEndDateTimeValueChangedCommod, ElementName=LayoutRoot}"  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type DatePicker}, Mode=FindAncestor}}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </DatePicker>
                                        <TextBlock HorizontalAlignment="Center" Margin="0" TextWrapping="Wrap" Text="至" VerticalAlignment="Center" FontSize="25"/>

                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="5">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">

                                        <TextBox HorizontalAlignment="Stretch" Height="Auto" TextWrapping="Wrap" VerticalAlignment="Stretch" Width="Auto" Margin="20,10" Text="{Binding provider, Mode=TwoWay}" FontSize="25"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="6">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">

                                        <UserCtrl:ImageButtonEx Content="ImageButtonEx" HorizontalAlignment="Stretch" Height="33" Margin="0" Style="{DynamicResource ImageButtonExStyle3}" VerticalAlignment="Stretch" Width="31" ImagePressSource="/Honda;component/Assets/EvaluationOfTour/page_icons_compile.png" ImageSource="/Honda;component/Assets/EvaluationOfTour/page_icons_compile.png" Command="{Binding DataContext.OpenRemarkWMCommod, ElementName=LayoutRoot}" CommandParameter="{Binding}"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="7">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <StackPanel Height="Auto" VerticalAlignment="Center" Width="Auto"/>
                                    </Grid>
                                </Border>
                                <Grid Grid.ColumnSpan="1" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="8">
                                    <Button Content="删除" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" FontSize="25" Foreground="#FFFD0404" BorderThickness="0" Background="{x:Null}" BorderBrush="{x:Null}" Command="{Binding DataContext.DeletNotPureComponent, ElementName=LayoutRoot}" CommandParameter="{Binding}"/>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ListBoxItemBusinessStyle2" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid HorizontalAlignment="Stretch">
                        <Border BorderBrush="#FF898383" BorderThickness="1,0,1,1" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                            <Grid Height="120">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="8*"/>
                                    <ColumnDefinition Width="6*"/>
                                    <ColumnDefinition Width="16*"/>
                                    <ColumnDefinition Width="10*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                </Grid.ColumnDefinitions>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <TextBox Height="Auto" TextWrapping="Wrap" VerticalAlignment="Stretch" Width="Auto" Margin="20,10" Text="{Binding exportSaler, Mode=TwoWay}" FontSize="25"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="1">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <TextBox HorizontalAlignment="Stretch" Height="Auto" TextWrapping="Wrap" VerticalAlignment="Center" Width="Auto" Margin="20,10" Text="{Binding price, Mode=TwoWay}" FontSize="25"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="2">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">

                                        <DatePicker HorizontalAlignment="Left"  Margin="10,0,0,0"  VerticalAlignment="Center" Width="240" FontSize="25" Tag="{Binding}" SelectedDate="{Binding startDate,Mode=TwoWay}" >
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="SelectedDateChanged">
                                                    <i:InvokeCommandAction Command="{Binding DataContext.ESDepartmentStartDateTimeValueChangedCommod1, ElementName=LayoutRoot}"  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type DatePicker}, Mode=FindAncestor}}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </DatePicker>
                                        <DatePicker HorizontalAlignment="Right"  Margin="0,0,10,0" VerticalAlignment="Center" Width="240" FontSize="25" Tag="{Binding}" SelectedDate="{Binding  endDate,Mode=TwoWay}" >
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="SelectedDateChanged">
                                                    <i:InvokeCommandAction Command="{Binding DataContext.ESDepartmentEndDateTimeValueChangedCommod1, ElementName=LayoutRoot}"  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type DatePicker}, Mode=FindAncestor}}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </DatePicker>
                                        <TextBlock HorizontalAlignment="Center" Margin="278.268,46.453,280.268,46.453" TextWrapping="Wrap" Text="至" VerticalAlignment="Center" FontSize="25"/>

                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="3">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <TextBox HorizontalAlignment="Stretch" Height="Auto" TextWrapping="Wrap" VerticalAlignment="Stretch" Width="Auto" Margin="20,10" Text="{Binding mainPart, Mode=TwoWay}" FontSize="25"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="4">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">

                                        <UserCtrl:ImageButtonEx Content="ImageButtonEx" HorizontalAlignment="Stretch" Height="33" Margin="0" Style="{DynamicResource ImageButtonExStyle3}" VerticalAlignment="Stretch" Width="31" ImagePressSource="/Honda;component/Assets/EvaluationOfTour/page_icons_compile.png" ImageSource="/Honda;component/Assets/EvaluationOfTour/page_icons_compile.png" Command="{Binding DataContext.OpenESDepartmentRemarkWMCommod1, ElementName=LayoutRoot}" CommandParameter="{Binding}"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Right" Height="Auto" VerticalAlignment="Stretch" Width="55.333" Grid.Column="5">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <StackPanel Height="Auto" VerticalAlignment="Center" Width="Auto"/>
                                    </Grid>
                                </Border>
                                <Grid Grid.ColumnSpan="1" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="8">
                                    <Button Content="删除" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" FontSize="25" Foreground="#FFFD0404" BorderThickness="0" Background="{x:Null}" BorderBrush="{x:Null}" Command="{Binding DataContext.DeletComponentESDepartment, ElementName=LayoutRoot}" CommandParameter="{Binding}"/>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ListBoxItemBusinessStyle2_1" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid HorizontalAlignment="Stretch">
                        <Border BorderBrush="#FF898383" BorderThickness="1,0,1,1" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                            <Grid Height="120">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="6*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <TextBox Height="Auto" TextWrapping="Wrap" VerticalAlignment="Stretch" Width="Auto" Margin="20,10" Text="{Binding partNo, Mode=TwoWay}" FontSize="25"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="1">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <TextBox HorizontalAlignment="Stretch" Height="Auto" TextWrapping="Wrap" VerticalAlignment="Stretch" Width="Auto" Margin="20,10" Text="{Binding partName, Mode=TwoWay}" FontSize="25"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="2">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <TextBox HorizontalAlignment="Stretch" Height="Auto" TextWrapping="Wrap" VerticalAlignment="Stretch" Width="Auto" Margin="20,10" Text="{Binding partNum, Mode=TwoWay}" FontSize="25"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="3">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">

                                        <DatePicker HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center" Width="240" FontSize="25" Tag="{Binding}" SelectedDate="{Binding startDate,Mode=TwoWay}" >
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="SelectedDateChanged">
                                                    <i:InvokeCommandAction Command="{Binding DataContext.ESDepartmentStartDateTimeValueChangedCommod2, ElementName=LayoutRoot}"  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type DatePicker}, Mode=FindAncestor}}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </DatePicker>
                                        <DatePicker HorizontalAlignment="Right" Margin="0,0,10,0" VerticalAlignment="Center" Width="240" FontSize="25" Tag="{Binding}" SelectedDate="{Binding endDate,Mode=TwoWay}" >
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="SelectedDateChanged">
                                                    <i:InvokeCommandAction Command="{Binding DataContext.ESDepartmentEndDateTimeValueChangedCommod2, ElementName=LayoutRoot}"  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type DatePicker}, Mode=FindAncestor}}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </DatePicker>
                                        <TextBlock HorizontalAlignment="Center" Margin="0" TextWrapping="Wrap" Text="至" VerticalAlignment="Center" FontSize="25"/>

                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="4">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <TextBox HorizontalAlignment="Stretch" Height="Auto" TextWrapping="Wrap" VerticalAlignment="Stretch" Width="Auto" Margin="20,10" Text="{Binding exportObject, Mode=TwoWay}" FontSize="25"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="5">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">

                                        <UserCtrl:ImageButtonEx Content="ImageButtonEx" HorizontalAlignment="Stretch" Height="33" Margin="0" Style="{DynamicResource ImageButtonExStyle3}" VerticalAlignment="Stretch" Width="31" ImagePressSource="/Honda;component/Assets/EvaluationOfTour/page_icons_compile.png" ImageSource="/Honda;component/Assets/EvaluationOfTour/page_icons_compile.png" Command="{Binding DataContext.OpenESDepartmentRemarkWMCommod2, ElementName=LayoutRoot}" CommandParameter="{Binding}"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="6">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <StackPanel Height="Auto" VerticalAlignment="Center" Width="Auto"/>
                                    </Grid>
                                </Border>
                                <Grid Grid.ColumnSpan="1" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="8">
                                    <Button Content="删除" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" FontSize="25" Foreground="#FFFD0404" BorderThickness="0" Background="{x:Null}" BorderBrush="{x:Null}" Command="{Binding DataContext.DeletComponentESDepartment2, ElementName=LayoutRoot}" CommandParameter="{Binding}"/>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ListBoxItemBusinessStyle3" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid HorizontalAlignment="Stretch">
                        <Border BorderBrush="#FF898383" BorderThickness="1,0,1,1" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                            <Grid Height="120">
                                <Grid.ColumnDefinitions>

                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="8*"/>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="2*"/>
                                </Grid.ColumnDefinitions>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <TextBox Height="Auto" TextWrapping="Wrap" VerticalAlignment="Stretch" Width="Auto" Margin="20,10" Text="{Binding partNo, Mode=TwoWay}" FontSize="25"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="1">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <TextBox HorizontalAlignment="Stretch" Height="Auto" TextWrapping="Wrap" VerticalAlignment="Stretch" Width="Auto" Margin="20,10" Text="{Binding partName, Mode=TwoWay}" FontSize="25"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="2">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <TextBox HorizontalAlignment="Stretch" Height="Auto" TextWrapping="Wrap" VerticalAlignment="Center" Width="Auto" Margin="20,40" Text="{Binding salePrice, Mode=TwoWay}" FontSize="25"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="3">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <TextBox HorizontalAlignment="Stretch" Height="Auto" TextWrapping="Wrap" VerticalAlignment="Center" Width="Auto" Margin="20,10" Text="{Binding normalPrice, Mode=TwoWay}" FontSize="25"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="5">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">

                                        <TextBox HorizontalAlignment="Stretch" Height="Auto" TextWrapping="Wrap" VerticalAlignment="Center" Width="Auto" Margin="20,10" Text="{Binding partNum, Mode=TwoWay}" FontSize="25"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="4">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">

                                        <TextBox HorizontalAlignment="Stretch" Height="Auto" TextWrapping="Wrap" VerticalAlignment="Center" Width="Auto" Margin="20,10" Text="{Binding spread, Mode=TwoWay}" FontSize="25"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="6">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">

                                        <DatePicker HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center" Width="220" FontSize="25" Tag="{Binding}" SelectedDate="{Binding startDate,Mode=TwoWay}" >
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="SelectedDateChanged">
                                                    <i:InvokeCommandAction Command="{Binding DataContext.ComponentPriceStartDateTimeValueChangedCommod, ElementName=LayoutRoot}"  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type DatePicker}, Mode=FindAncestor}}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </DatePicker>
                                        <DatePicker HorizontalAlignment="Right" Margin="0,0,10,0" VerticalAlignment="Center" Width="220" FontSize="25" Tag="{Binding}" SelectedDate="{Binding endDate,Mode=TwoWay}">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="SelectedDateChanged">
                                                    <i:InvokeCommandAction Command="{Binding DataContext.ComponentPriceEndDateTimeValueChangedCommod, ElementName=LayoutRoot}"  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type DatePicker}, Mode=FindAncestor}}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </DatePicker>
                                        <TextBlock HorizontalAlignment="Center" Margin="0" TextWrapping="Wrap" Text="至" VerticalAlignment="Center" FontSize="25"/>

                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="7">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">

                                        <UserCtrl:ImageButtonEx Content="ImageButtonEx" HorizontalAlignment="Stretch" Height="33" Margin="0" Style="{DynamicResource ImageButtonExStyle3}" VerticalAlignment="Stretch" Width="31" ImagePressSource="/Honda;component/Assets/EvaluationOfTour/page_icons_compile.png" ImageSource="/Honda;component/Assets/EvaluationOfTour/page_icons_compile.png" Command="{Binding DataContext.OpenComponentPriceWMCommod, ElementName=LayoutRoot}" CommandParameter="{Binding}"/>
                                    </Grid>
                                </Border>
                                <Grid Grid.ColumnSpan="1" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="8">
                                    <Button Content="删除" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" FontSize="25" Foreground="#FFFD0404" BorderThickness="0" Background="{x:Null}" BorderBrush="{x:Null}" Command="{Binding DataContext.DeletComponentPrice, ElementName=LayoutRoot}" CommandParameter="{Binding}"/>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="ImproveTemplate1">
        <Grid>
            <Grid Width="Auto">
                <Border BorderBrush="#FF898383" BorderThickness="1,0,1,1" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                    <Grid Height="120" Width="1670">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="8*"/>
                            <ColumnDefinition Width="6*"/>
                            <ColumnDefinition Width="16*"/>
                            <ColumnDefinition Width="10*"/>
                            <ColumnDefinition Width="3*"/>
                            <ColumnDefinition Width="3*"/>
                        </Grid.ColumnDefinitions>
                        <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto">
                            <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                <TextBox Height="Auto" TextWrapping="Wrap" VerticalAlignment="Stretch" Width="Auto" Margin="20,10" Text="{Binding exportSaler, Mode=TwoWay}" FontSize="25"/>
                            </Grid>
                        </Border>
                        <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="1">
                            <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                <TextBox HorizontalAlignment="Stretch" Height="Auto" TextWrapping="Wrap" VerticalAlignment="Center" Width="Auto" Margin="20,10" Text="{Binding price, Mode=TwoWay}" FontSize="25"/>
                            </Grid>
                        </Border>
                        <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="2">
                            <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">

                                <DatePicker HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center" Width="230" FontSize="17.333" Tag="{Binding}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectedDateChanged">
                                            <i:InvokeCommandAction Command="{Binding DataContext.ESDepartmentStartDateTimeValueChangedCommod1, ElementName=LayoutRoot}"  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type DatePicker}, Mode=FindAncestor}}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </DatePicker>
                                <DatePicker HorizontalAlignment="Right" Margin="0,0,10,0" VerticalAlignment="Center" Width="230" FontSize="25" Tag="{Binding}" >
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectedDateChanged">
                                            <i:InvokeCommandAction Command="{Binding DataContext.ESDepartmentEndDateTimeValueChangedCommod1, ElementName=LayoutRoot}"  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type DatePicker}, Mode=FindAncestor}}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </DatePicker>
                                <TextBlock HorizontalAlignment="Center" Margin="0" TextWrapping="Wrap" Text="至" VerticalAlignment="Center" FontSize="25"/>

                            </Grid>
                        </Border>
                        <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="3">
                            <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                <TextBox HorizontalAlignment="Stretch" Height="Auto" TextWrapping="Wrap" VerticalAlignment="Stretch" Width="Auto" Margin="20,10" Text="{Binding mainPart, Mode=TwoWay}"/>
                            </Grid>
                        </Border>
                        <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="4">
                            <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">

                                <UserCtrl:ImageButtonEx Content="ImageButtonEx" HorizontalAlignment="Stretch" Height="33" Margin="0" Style="{DynamicResource ImageButtonExStyle3}" VerticalAlignment="Stretch" Width="31" ImagePressSource="/Honda;component/Assets/EvaluationOfTour/page_icons_compile.png" ImageSource="/Honda;component/Assets/EvaluationOfTour/page_icons_compile.png" Command="{Binding DataContext.OpenESDepartmentRemarkWMCommod1, ElementName=LayoutRoot}" CommandParameter="{Binding}"/>
                            </Grid>
                        </Border>
                        <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Right" Height="Auto" VerticalAlignment="Stretch" Width="55.333" Grid.Column="5">
                            <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                <StackPanel Height="Auto" VerticalAlignment="Center" Width="Auto"/>
                            </Grid>
                        </Border>
                        <Grid Grid.ColumnSpan="1" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="8">
                            <Button Content="删除" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" FontSize="25" Foreground="#FFFD0404" BorderThickness="0" Background="{x:Null}" BorderBrush="{x:Null}" Command="{Binding DataContext.DeletComponentESDepartment, ElementName=LayoutRoot}" CommandParameter="{Binding}"/>
                        </Grid>
                    </Grid>
                </Border>
            </Grid>
        </Grid>
    </DataTemplate>
    <Style x:Key="ImplroveItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid Width="1858">
                        <Border BorderBrush="#FF898383" BorderThickness="1,0,1,1" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                            <Grid Height="120">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="4*"/>
                                    <ColumnDefinition Width="4*"/>
                                    <ColumnDefinition Width="16*"/>
                                    <ColumnDefinition Width="4*"/>
                                    <ColumnDefinition Width="16*"/>
                                    <ColumnDefinition Width="16*"/>
                                    <ColumnDefinition Width="5*"/>
                                    <ColumnDefinition Width="4*"/>
                                </Grid.ColumnDefinitions>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" VerticalAlignment="Center" Style="{DynamicResource TextBlockStyle4}" Text="{Binding strNo}" FontSize="25"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="1">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" VerticalAlignment="Center" Style="{DynamicResource TextBlockStyle4}" Text="{Binding middName}" FontSize="25"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="2">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" VerticalAlignment="Center" Style="{DynamicResource TextBlockStyle4}" Text="{Binding smallName}" FontSize="25"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="3">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" VerticalAlignment="Center" Style="{DynamicResource TextBlockStyle4}" Text="{Binding minName}" FontSize="25"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="4">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <ComboBox HorizontalAlignment="Center" VerticalAlignment="Center" Width="70" Tag="{Binding}" ItemsSource="{Binding ListPriority}" DisplayMemberPath="priorityName" SelectedItem="{Binding SelectPriority}" FontSize="25" SelectedIndex="0">

                                        </ComboBox>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="5">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">

                                        <TextBox Height="Auto" TextWrapping="Wrap" VerticalAlignment="Stretch" Width="Auto" Margin="20,10"  FontSize="16" Text="{Binding description, Mode=TwoWay}"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="6">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <DatePicker HorizontalAlignment="Center" Margin="10,0,0,0" VerticalAlignment="Center" Width="290" FontSize="25" Tag="{Binding}" SelectedDate="{Binding finishTime, Mode=TwoWay}" >
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="SelectedDateChanged">
                                                    <i:InvokeCommandAction Command="{Binding DataContext.DateTimeValueChangedCommod, ElementName=LayoutRoot}"  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type DatePicker}, Mode=FindAncestor}}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </DatePicker>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="7">
                                    <Grid Height="Auto" VerticalAlignment="Center" Width="Auto" Margin="0">
                                        <TextBox Height="Auto" TextWrapping="Wrap" VerticalAlignment="Stretch" Width="Auto" Margin="10"  FontSize="25" Text="{Binding responsiblePerson, Mode=TwoWay}"/>
                                    </Grid>
                                </Border>
                                <Grid Grid.ColumnSpan="1" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="8">
                                    <Button Content="忽略" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" FontSize="25" Foreground="#FFFD0404" BorderThickness="0" Background="{x:Null}" BorderBrush="{x:Null}" Command="{Binding DataContext.IgnoreImprove, ElementName=LayoutRoot}" CommandParameter="{Binding}" Visibility="{Binding bIsShowIgnore}"/>
                                    <Button Content="恢复" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" FontSize="25" Foreground="#FFFD0404" BorderThickness="0" Background="{x:Null}" BorderBrush="{x:Null}" Command="{Binding DataContext.RecoverImproveCommand, ElementName=LayoutRoot}" CommandParameter="{Binding}" Visibility="{Binding bIsShowRecover}"/>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextBlockStyle4" TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="TextTrimming" Value="None"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Text" Value="1"/>
    </Style>
    <Style x:Key="ImproveCheckItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid Width="1858" Height="200">
                        <Border BorderBrush="#FF898383" BorderThickness="1,0,1,1" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="6*"/>
                                    <ColumnDefinition Width="6*"/>
                                    <ColumnDefinition Width="10*"/>
                                    <ColumnDefinition Width="4*"/>
                                    <ColumnDefinition Width="10*"/>
                                    <ColumnDefinition Width="10*"/>
                                    <ColumnDefinition Width="10*"/>
                                    <ColumnDefinition Width="6*"/>
                                    <ColumnDefinition Width="6*"/>
                                    <ColumnDefinition Width="6*"/>
                                    <ColumnDefinition Width="10*"/>
                                </Grid.ColumnDefinitions>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="{Binding strNo}" VerticalAlignment="Center" FontSize="25"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="1">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="{Binding middName}" VerticalAlignment="Center" FontSize="25" Margin="0"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="2">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="{Binding smallName}" VerticalAlignment="Center" FontSize="25" Margin="0"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="3">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="{Binding minName}" VerticalAlignment="Center" FontSize="25" Margin="0"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="4">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="{Binding priorityName}" VerticalAlignment="Center" FontSize="25" Margin="0"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="5">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="{Binding description}" VerticalAlignment="Center" FontSize="25" Margin="0"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="6">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="{Binding mprovementMeasure}" VerticalAlignment="Center" FontSize="25" Margin="0"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="7">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="{Binding finishTime}" VerticalAlignment="Center" FontSize="25" Margin="0"/>
                                    </Grid>
                                </Border>



                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="8">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="{Binding responsiblePerson}" VerticalAlignment="Center" FontSize="25" Margin="0"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="9">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="{Binding statusName}" VerticalAlignment="Center" FontSize="25" Margin="0"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="10">
                                    <Grid HorizontalAlignment="Center" Height="Auto" VerticalAlignment="Center" Width="Auto" Margin="0">
                                        <Button Content="查看" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="20,0,0,0" FontSize="25" Foreground="#FFFD0404" BorderThickness="0" Background="{x:Null}" BorderBrush="{x:Null}" Command="{Binding DataContext.OpenDownFileWindowsCommand, ElementName=LayoutRoot}" CommandParameter="{Binding}"/>
                                    </Grid>
                                </Border>
                                <Grid Grid.ColumnSpan="1" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="11">
                                    <Button Content="通过" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="20,0,0,0" FontSize="25" Foreground="#FFFD0404" BorderThickness="0" Background="{x:Null}" BorderBrush="{x:Null}" Command="{Binding DataContext.PassCommand, ElementName=LayoutRoot}" CommandParameter="{Binding}"/>
                                    <Button Content="不通过" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="20,0" FontSize="25" Foreground="#FFFD0404" BorderThickness="0" Background="{x:Null}" BorderBrush="{x:Null}" Command="{Binding DataContext.NoPassCommand, ElementName=LayoutRoot}" CommandParameter="{Binding}"/>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DownloadWindowsItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid Height="90" Width="1166">
                        <Border BorderBrush="#FF898383" BorderThickness="1,0,1,1" Height="90" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="10*"/>
                                    <ColumnDefinition Width="4*"/>
                                </Grid.ColumnDefinitions>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap"  VerticalAlignment="Center" FontSize="25" Text="{Binding StrNo}"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="#FF898383" BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="1">
                                    <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0">
                                        <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap"  VerticalAlignment="Center" FontSize="25" Margin="40,0,0,0" Text="{Binding FileName}"/>
                                    </Grid>
                                </Border>
                                <Grid Grid.ColumnSpan="1" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="2">
                                    <Button Content="{Binding Prompt}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" FontSize="25" Foreground="#FFFD0404" BorderThickness="0" Background="{x:Null}" BorderBrush="{x:Null}" Command="{Binding DataContext.DownFileCommand, ElementName=LayoutRoot}" CommandParameter="{Binding}"/>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ListBoxItemSchedule" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid Width="330" Height="160" Background="#FFFFFDFD">
                        <Border BorderBrush="#FFDEE3E6" BorderThickness="0,0,0,2" Height="Auto" Margin="24,0,0,0" VerticalAlignment="Stretch" Width="Auto">
                            <StackPanel>
                                <Grid Height="35" Margin="0,40,0,0">
                                    <StackPanel Height="Auto" VerticalAlignment="Stretch" Width="Auto" Orientation="Horizontal">
                                        <Grid>
                                            <TextBlock x:Name="tbkTaskID" Text="{Binding TaskID}" Visibility="Collapsed"></TextBlock>
                                            <TextBlock x:Name="tbkOutData" TextWrapping="Wrap" Text="{Binding TaskName}" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="25" Margin="0" Foreground="#FF231815" Visibility="{Binding _bIsShowOutData}" />
                                            <TextBlock x:Name="tbkWillOutData" TextWrapping="Wrap" Text="{Binding TaskName}" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="25" Margin="0" Foreground="#FF636364"  Visibility="{Binding _bIsShowWillOutData}"/>
                                            <Button Margin="5" Content="{Binding TaskName}" Width="{Binding ElementName=tbkOutData,Path=Width}" Height="{Binding ElementName=tbkOutData,Path=Height}" Cursor="Hand" Command="{Binding ViewTaskCommand}" CommandParameter="{Binding ElementName=tbkTaskID, Path=Text}">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger>
                                                        <V:DataContextProxy/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                                <Button.Template>
                                                    <ControlTemplate TargetType="Button">
                                                        <TextBlock TextDecorations="Underline" Text="{Binding TaskName}" />
                                                    </ControlTemplate>
                                                </Button.Template>
                                                <Button.Style>
                                                    <Style TargetType="Button">
                                                        <Setter Property="Foreground" Value="Blue" />
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="true">
                                                                <Setter Property="Foreground" Value="Red" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                        </Grid>
                                        <Image x:Name="imaOutData" Stretch="None" HorizontalAlignment="Left" VerticalAlignment="Center"  Width="Auto" Height="Auto" Margin="10,0,0,0" Source="/Honda;component/Assets/MainPage/bg_2.png" Visibility="{Binding _bIsShowOutData}"/>
                                        <Image x:Name="imaWillOutData" Stretch="None" HorizontalAlignment="Left" VerticalAlignment="Center"  Width="Auto" Height="Auto" Margin="10,0,0,0" Source="/Honda;component/Assets/MainPage/bg_3.png" Visibility="{Binding _bIsShowWillOutData}"/>
                                    </StackPanel>
                                </Grid>
                                <Grid Height="35" Margin="0,5,0,0">
                                    <StackPanel Height="Auto" VerticalAlignment="Stretch" Width="Auto" Orientation="Horizontal">
                                        <TextBlock x:Name="tbkStatusOutData" TextWrapping="Wrap" Text="任务状态：" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="25" Margin="0" Foreground="#FF231815" Visibility="{Binding _bIsShowOutData}"/>
                                        <TextBlock x:Name="tbkStatusWillOutData" TextWrapping="Wrap" Text="任务状态：" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="25" Margin="0" Foreground="#FF636364" Visibility="{Binding _bIsShowWillOutData}"/>
                                        <TextBlock x:Name="tbkTaskStatusOutData" TextWrapping="Wrap" Text="{Binding TaskStatus}" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="25" Margin="0,4.8" Foreground="#FF231815" Visibility="{Binding _bIsShowOutData}"/>
                                        <TextBlock x:Name="tbkTaskStatusWillOutData" TextWrapping="Wrap" Text="{Binding TaskStatus}" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="25" Margin="0,4.8" Foreground="#FF636364" Visibility="{Binding _bIsShowWillOutData}" />
                                    </StackPanel>
                                </Grid>


                            </StackPanel>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="DataTemplate1">
        <Grid Width="330" Height="160" Background="#FFFFFDFD">
            <Border BorderBrush="#FFDEE3E6" BorderThickness="0,0,0,2" Height="Auto" Margin="24,0,0,0" VerticalAlignment="Stretch" Width="Auto">
                <StackPanel>
                    <Grid Height="35" Margin="0,40,0,0">
                        <StackPanel Height="Auto" VerticalAlignment="Stretch" Width="Auto" Orientation="Horizontal">
                            <TextBlock TextWrapping="Wrap" Text="{Binding TaskName}" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="25" Margin="0" Foreground="{Binding Foreground}"/>
                            <Image Stretch="None" HorizontalAlignment="Left" VerticalAlignment="Center" Source="{Binding icoPath}" Width="Auto" Height="Auto" Margin="10,0,0,0"/>
                        </StackPanel>
                    </Grid>
                    <Grid Height="35" Margin="0,5,0,0">
                        <StackPanel Height="Auto" VerticalAlignment="Stretch" Width="Auto" Orientation="Horizontal">
                            <TextBlock TextWrapping="Wrap" Text="任务状态：" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="25" Margin="0" Foreground="{Binding Foreground}"/>
                            <TextBlock x:Name="tbkTaskStatus" TextWrapping="Wrap" Text="{Binding TaskStatus}" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="25" Margin="0,4.8" Foreground="{Binding Foreground}"/>
                        </StackPanel>
                    </Grid>


                </StackPanel>
            </Border>
        </Grid>
    </DataTemplate>

    <!--###################################此处为滚动条样式############################################-->
    <!--x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}"-->
    <SolidColorBrush x:Key="ThumbBorderBackground" Color="#FFCDCDCD"/>
    <SolidColorBrush x:Key="ThumbMouseOverBackground" Color="#FF959393"/>
    <SolidColorBrush x:Key="ThumbDraggingBackground" Color="#FF505050"/>
    <!--x:Key="ScrollBarStyle1" TargetType="{x:Type ScrollBar}"-->
    <!--1,垂直与水平值相反-->
    <sys:Double x:Key="PepeatButtonPathWidth">8</sys:Double>
    <sys:Double x:Key="PepeatButtonPathHeight">6</sys:Double>
    <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">5</sys:Double>
    <sys:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarHeightKey}">5</sys:Double>
    <!--2,垂直与水平值一样-->
    <SolidColorBrush x:Key="PepeatButtonPathFill" Color="#FF444F4F"/>
    <SolidColorBrush x:Key="PepeatButtonPathMouseOverFill" Color="Black"/>
    <SolidColorBrush x:Key="PepeatButtonMouseOverBackground" Color="#FFDEDCDC"  Opacity="0.5"/>
    <SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="#F4F4F4" Opacity="0.5"/>
    <SolidColorBrush x:Key="ScrollBarBackground" Color="#F4F4F4"  Opacity="0.5"/>
    <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" SnapsToDevicePixels="true" Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Themes:ScrollChrome.ScrollGlyph}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="border" Background="{StaticResource ThumbBorderBackground}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ThumbMouseOverBackground}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ThumbDraggingBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarStyle1" TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="{StaticResource ScrollBarBackground}"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            <RowDefinition Height="0.00001*"/>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                        </Grid.RowDefinitions>
                        <RepeatButton x:Name="upButton" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" BorderBrush="{x:Null}" Foreground="{x:Null}" BorderThickness="0">
                            <Path x:Name="upPath" Height="{StaticResource PepeatButtonPathHeight}" Width="{StaticResource PepeatButtonPathWidth}" Stretch="Fill" Fill="{StaticResource PepeatButtonPathFill}" Data="F1 M 37.8516,35.625L 34.6849,38.7917L 23.6016,50.2708L 23.6016,39.9792L 37.8516,24.9375L 52.1016,39.9792L 52.1016,50.2708L 41.0182,38.7917L 37.8516,35.625 Z "/>
                        </RepeatButton>
                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}" Themes:ScrollChrome.ScrollGlyph="VerticalGripper"/>
                            </Track.Thumb>
                        </Track>
                        <RepeatButton x:Name="downButton" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Foreground="{x:Null}" BorderBrush="{x:Null}" BorderThickness="0">
                            <Path x:Name="downPath" Height="{StaticResource PepeatButtonPathHeight}" Width="{StaticResource PepeatButtonPathWidth}" Stretch="Fill" Fill="{StaticResource PepeatButtonPathFill}" Data="F1 M 37.8516,39.5833L 52.1016,24.9375L 52.1016,35.2292L 37.8516,50.2708L 23.6016,35.2292L 23.6016,24.9375L 37.8516,39.5833 Z "/>
                        </RepeatButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="True" SourceName="upButton">
                            <Setter Property="Fill" TargetName="upPath" Value="{StaticResource PepeatButtonPathMouseOverFill}"/>
                            <Setter Property="Fill" TargetName="downPath" Value="{StaticResource PepeatButtonPathMouseOverFill}"/>
                            <Setter Property="Background" TargetName="upButton" Value="{StaticResource PepeatButtonMouseOverBackground}"/>
                            <Setter Property="Background" TargetName="downButton" Value="{StaticResource PepeatButtonMouseOverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>

                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Background" Value="{StaticResource ScrollBarBackground}"/>
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                    <ColumnDefinition Width="0.00001*"/>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                </Grid.ColumnDefinitions>
                                <RepeatButton x:Name="leftButton" Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Foreground="{x:Null}" BorderBrush="{x:Null}" BorderThickness="0">
                                    <Path x:Name="leftPath" Height="{StaticResource PepeatButtonPathWidth}" Width="{StaticResource PepeatButtonPathHeight}" Stretch="Fill" Fill="DarkSlateGray" Data="F1 M 35.8724,37.6042L 39.0391,40.7708L 50.5182,51.8542L 40.2266,51.8542L 25.1849,37.6041L 40.2266,23.3542L 50.5182,23.3542L 39.0391,34.4375L 35.8724,37.6042 Z "/>
                                </RepeatButton>
                                <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumb}" Themes:ScrollChrome.ScrollGlyph="HorizontalGripper"/>
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton x:Name="rightButton" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Foreground="{x:Null}" BorderBrush="{x:Null}" BorderThickness="0">
                                    <Path x:Name="rightPath" Height="{StaticResource PepeatButtonPathWidth}" Width="{StaticResource PepeatButtonPathHeight}" Stretch="Fill" Fill="{StaticResource PepeatButtonPathFill}" Data="F1 M 39.8307,37.6042L 36.6641,34.4375L 25.1849,23.3542L 35.4766,23.3542L 50.5182,37.6042L 35.4766,51.8542L 25.1849,51.8542L 36.6641,40.7708L 39.8307,37.6042 Z "/>
                                </RepeatButton>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="True" SourceName="leftButton">
                                    <Setter Property="Fill" TargetName="leftPath" Value="{StaticResource PepeatButtonPathMouseOverFill}"/>
                                    <Setter Property="Fill" TargetName="rightPath" Value="{StaticResource PepeatButtonPathMouseOverFill}"/>
                                    <Setter Property="Background" TargetName="leftButton" Value="{StaticResource PepeatButtonMouseOverBackground}"/>
                                    <Setter Property="Background" TargetName="rightButton" Value="{StaticResource PepeatButtonMouseOverBackground}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--总样式x:Key="ScrollViewerStyle"，引用此处Key即可-->
    <ControlTemplate x:Key="ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource ScrollBarStyle1}"/>
            <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Style="{DynamicResource ScrollBarStyle1}"/>
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
        </Grid>
    </ControlTemplate>
    <!--###################################此处为滚动条样式############################################-->


    <!--###################################此处为日期控件样式############################################-->
    <Style TargetType="{x:Type DatePicker}">
        <!--Set CalendarStyle to DatePickerCalendarStyle.-->
        <Setter Property="CalendarStyle"
            Value="{DynamicResource DatePickerCalendarStyle}" />
    </Style>
    <Style  TargetType="{x:Type DatePickerTextBox}">
        <Setter Property="Text" Value="请选择日期"/>
    </Style>
    <Style x:Key="DatePickerCalendarStyle"
               TargetType="{x:Type Calendar}">
        <!--日历控件的背景色,也可以改成绑定的-->
        <Setter Property="Background"
                    Value="#f6f6f6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Calendar}">
                    <Viewbox Height="500" Width="500" Stretch="Fill">
                        <StackPanel x:Name="PART_Root"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                            <!--这个是日历控件的主体元件,也是内部元件PART_CalendarItem名称不要更改,可以改它的其它样式属性-->
                            <CalendarItem x:Name="PART_CalendarItem"
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          BorderThickness="{TemplateBinding BorderThickness}"
                                          Background="{TemplateBinding Background}"
                                          Style="{TemplateBinding CalendarItemStyle}"
                                          Height="{TemplateBinding Height}"
                                          Width="{TemplateBinding Width}"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch" />
                        </StackPanel>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--###################################此处为日期控件样式############################################-->
</ResourceDictionary>
    
    
    
    
    